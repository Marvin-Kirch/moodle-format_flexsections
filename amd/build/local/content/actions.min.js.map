{"version":3,"file":"actions.min.js","sources":["../../../src/local/content/actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {BaseComponent} from 'core/reactive';\nimport {get_string as getString, get_strings as getStrings} from \"core/str\";\nimport Notification from \"core/notification\";\nimport ModalFactory from \"core/modal_factory\";\nimport Templates from \"core/templates\";\nimport Pending from \"core/pending\";\n\n/**\n * Actions\n *\n * @module     format_flexsections/local/content/actions\n * @copyright  2022 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport default class extends BaseComponent {\n    // Example: course/format/amd/src/local/content/actions.js\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'content_actions_flexsections';\n        // Default query selectors.\n        this.selectors = {\n            ACTIONLINK: `[data-action-flexsections]`,\n            SECTIONLINK: `[data-for='section']`,\n        };\n        // Component css classes.\n        this.classes = {\n            DISABLED: `disabled`,\n        };\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {Object} state the state data.\n     *\n     */\n    stateReady(state) {\n        super.stateReady(state);\n        // Delegate dispatch clicks.\n        this.addEventListener(\n            this.element,\n            'click',\n            this._dispatchClick\n        );\n    }\n\n    _dispatchClick(event) {\n        const target = event.target.closest(this.selectors.ACTIONLINK);\n        if (!target) {\n            return;\n        }\n        if (target.classList.contains(this.classes.DISABLED)) {\n            event.preventDefault();\n            return;\n        }\n\n        // Invoke proper method.\n        const methodName = this._actionMethodName(target.getAttribute('data-action-flexsections'));\n\n        if (this[methodName] !== undefined) {\n            this[methodName](target, event);\n        }\n    }\n\n    _actionMethodName(name) {\n        const requestName = name.charAt(0).toUpperCase() + name.slice(1);\n        return `_request${requestName}`;\n    }\n\n    /**\n     * Handle a merge section request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    _requestMergeup(target, event) {\n        event.preventDefault();\n        getStrings([\n            {key: 'confirm', component: 'moodle'},\n            {key: 'confirmmerge', component: 'format_flexsections'},\n            {key: 'yes', component: 'moodle'},\n            {key: 'no', component: 'moodle'}\n        ]).done((strings) => {\n            Notification.confirm(\n                strings[0], // Confirm.\n                strings[1], // Are you sure you want to merge.\n                strings[2], // Yes.\n                strings[3], // No.\n                () => {\n                    this.reactive.dispatch('mergeup', [target.getAttribute('data-id')], 0);\n                }\n            );\n        }).fail(Notification.exception);\n    }\n\n    /**\n     * Handle a move section request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    _requestMoveSection(target, event) {\n        event.preventDefault();\n        const sectionId = target.getAttribute('data-id');\n        const sectionInfo = this.reactive.get('section', sectionId);\n        const exporter = this.reactive.getExporter();\n        const data = exporter.course(this.reactive.state);\n        data.sectiontitle = sectionInfo.title;\n\n        if (data.sections.length === 1 && `${data.sections[0].singlesection}` === '1') {\n            // We are on a page of a collapsed section. Do not show \"move before\" and \"move after\" controls.\n            data.singlesectionmode = 1;\n            data.sections[0].contentcollapsed = false;\n            // TODO allow to move from collapsed section up level.\n        }\n        const buildParents = (sections, parents) => {\n            for (var i in sections) {\n                sections[i].parents = parents;\n                sections[i].aftersectionid = (i > 0) ? sections[i - 1].id : 0;\n                buildParents(sections[i].children, parents + ',' + sections[i].id);\n                sections[i].lastchildid = sections[i].children.length ?\n                    sections[i].children[sections[i].children.length - 1].id : 0;\n            }\n        };\n        buildParents(data.sections, '');\n        data.lastchildid = data.sections.length ? data.sections[data.sections.length - 1].id : 0;\n\n        ModalFactory.create({\n            type: ModalFactory.types.CANCEL,\n            title: getString('movecoursesection', 'core'),\n            large: true,\n            buttons: {cancel: getString('closebuttontitle', 'core')},\n            removeOnClose: true,\n        })\n            .then(modal => {\n                Templates.render('format_flexsections/local/content/movesection', data).\n                then((body) => {\n                    modal.setBody(body);\n                    this._setupMoveSection(modal, modal.getBody()[0], sectionId, data);\n                    return null;\n                })\n                .fail(() => null);\n                modal.show();\n                return modal;\n            })\n            .fail(() => null);\n    }\n\n    /**\n     * Handle a move activity request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    _requestMoveCm(target, event) {\n        event.preventDefault();\n        const cmId = target.dataset.id;\n        if (!cmId) {\n            return;\n        }\n        const cmInfo = this.reactive.get('cm', cmId);\n\n        const exporter = this.reactive.getExporter();\n        const data = exporter.course(this.reactive.state);\n\n        // TODO set before and after current as disabled.\n        // TODO allow to move from collapsed section up level.\n\n        data.cmid = cmInfo.id;\n        data.cmname = cmInfo.name;\n\n        ModalFactory.create({\n            type: ModalFactory.types.CANCEL,\n            title: getString('movecoursemodule', 'core'),\n            large: true,\n            buttons: {cancel: getString('closebuttontitle', 'core')},\n            removeOnClose: true,\n        })\n            .then(modal => {\n                Templates.render('format_flexsections/local/content/movecm', data).\n                then((body) => {\n                    modal.setBody(body);\n                    this._setupMoveCm(modal, modal.getBody()[0], cmId, data);\n                    return null;\n                })\n                .fail(() => null);\n                modal.show();\n                return modal;\n            })\n            .fail(() => null);\n    }\n\n    /**\n     * Set up a popup window for moving activity\n     *\n     * @param {Modal} modal\n     * @param {Element} modalBody\n     * @param {Number} cmId\n     * @param {Object} data\n     * @param {Element} element\n     */\n    _setupMoveCm(modal, modalBody, cmId, data, element = null) {\n\n        // Capture click.\n        modalBody.addEventListener('click', (event) => {\n            const target = event.target;\n            if (!target.matches('a') || target.dataset.for === undefined || target.dataset.id === undefined) {\n                return;\n            }\n            if (target.getAttribute('aria-disabled')) {\n                return;\n            }\n            event.preventDefault();\n\n            const targetSectionId = (target.dataset.for === 'section') ? target.dataset.id : 0;\n            const targetCmId = (target.dataset.for === 'cm') ? target.dataset.id : 0;\n            this.reactive.dispatch('cmMove', [cmId], targetSectionId, targetCmId);\n            this._destroyModal(modal, element);\n        });\n    }\n\n    /**\n     * Destroy modal popup\n     *\n     * @param {Modal} modal\n     * @param {Element} element\n     */\n    _destroyModal(modal, element = null) {\n\n        // Destroy\n        modal.hide();\n        const pendingDestroy = new Pending(`courseformat/actions:destroyModal`);\n        if (element) {\n            element.focus();\n        }\n        setTimeout(() =>{\n            modal.destroy();\n            pendingDestroy.resolve();\n        }, 500);\n\n    }\n\n    /**\n     * Set up a popup window for moving section\n     *\n     * @param {Modal} modal\n     * @param {Element} modalBody\n     * @param {Number} sectionId\n     * @param {Object} data\n     * @param {Element} element\n     */\n    _setupMoveSection(modal, modalBody, sectionId, data, element = null) {\n\n        // Disable moving before or after itself or under one of its own children.\n        const links = modalBody.querySelectorAll(`${this.selectors.SECTIONLINK}`);\n        for (let i = 0; i < links.length; ++i) {\n            const re = new RegExp(`,${sectionId},`, \"g\");\n            if (links[i].getAttribute('data-before') === `${sectionId}` || links[i].getAttribute('data-after') === `${sectionId}` ||\n                `${links[i].getAttribute('data-parents')},`.match(re)) {\n                this._disableLink(links[i]);\n            }\n        }\n\n        // TODO.\n        // Setup keyboard navigation.\n        // new ContentTree(\n        //     modalBody.querySelector(this.selectors.CONTENTTREE),\n        //     {\n        //         SECTION: this.selectors.SECTIONNODE,\n        //         TOGGLER: this.selectors.MODALTOGGLER,\n        //         COLLAPSE: this.selectors.MODALTOGGLER,\n        //     },\n        //     true\n        // );\n\n        // Capture click.\n        modalBody.addEventListener('click', (event) => {\n\n            const target = event.target;\n            if (!target.matches('a') || target.dataset.for !== 'section' || target.dataset.after === undefined) {\n                return;\n            }\n            if (target.getAttribute('aria-disabled')) {\n                return;\n            }\n            event.preventDefault();\n            const afterId = parseInt(target.dataset.after);\n            const parentId = parseInt(target.dataset.parentid);\n            this.reactive.dispatch('sectionMove', [sectionId], afterId ? afterId : -parentId);\n\n            this._destroyModal(modal, element);\n        });\n    }\n\n    /**\n     * Disable link\n     *\n     * @param {Element} element\n     */\n    _disableLink(element) {\n        if (element) {\n            element.style.pointerEvents = 'none';\n            element.style.userSelect = 'none';\n            element.classList.add('disabled');\n            element.setAttribute('aria-disabled', true);\n            element.addEventListener('click', event => event.preventDefault());\n        }\n    }\n\n    /**\n     * Handle a move request to add a subsection.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    _requestAddSubSection(target, event) {\n        event.preventDefault();\n        this.reactive.dispatch('addSubSection', parseInt(target.dataset.parentid ?? 0));\n    }\n\n    /**\n     * Handle a request to switch the section mode (displayed on the same page vs as a link).\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    _requestSectionSwitchCollapsed(target, event) {\n        event.preventDefault();\n        this.reactive.dispatch('sectionSwitchCollapsed', target.dataset.id ?? 0);\n    }\n}\n"],"names":["BaseComponent","create","name","selectors","ACTIONLINK","SECTIONLINK","classes","DISABLED","stateReady","state","addEventListener","this","element","_dispatchClick","event","target","closest","classList","contains","preventDefault","methodName","_actionMethodName","getAttribute","undefined","requestName","charAt","toUpperCase","slice","_requestMergeup","key","component","done","strings","confirm","reactive","dispatch","fail","Notification","exception","_requestMoveSection","sectionId","sectionInfo","get","data","getExporter","course","sectiontitle","title","sections","length","singlesection","singlesectionmode","contentcollapsed","buildParents","parents","i","aftersectionid","id","children","lastchildid","type","ModalFactory","types","CANCEL","large","buttons","cancel","removeOnClose","then","modal","render","body","setBody","_setupMoveSection","getBody","show","_requestMoveCm","cmId","dataset","cmInfo","cmid","cmname","_setupMoveCm","modalBody","matches","for","targetSectionId","targetCmId","_destroyModal","hide","pendingDestroy","Pending","focus","setTimeout","destroy","resolve","links","querySelectorAll","re","RegExp","match","_disableLink","after","afterId","parseInt","parentId","parentid","style","pointerEvents","userSelect","add","setAttribute","_requestAddSubSection","_requestSectionSwitchCollapsed"],"mappings":";;;;;;;8SA6B6BA,wBAMzBC,cAESC,KAAO,oCAEPC,UAAY,CACbC,wCACAC,yCAGCC,QAAU,CACXC,qBAURC,WAAWC,aACDD,WAAWC,YAEZC,iBACDC,KAAKC,QACL,QACAD,KAAKE,gBAIbA,eAAeC,aACLC,OAASD,MAAMC,OAAOC,QAAQL,KAAKR,UAAUC,gBAC9CW,iBAGDA,OAAOE,UAAUC,SAASP,KAAKL,QAAQC,sBACvCO,MAAMK,uBAKJC,WAAaT,KAAKU,kBAAkBN,OAAOO,aAAa,kCAErCC,IAArBZ,KAAKS,kBACAA,YAAYL,OAAQD,OAIjCO,kBAAkBnB,YACRsB,YAActB,KAAKuB,OAAO,GAAGC,cAAgBxB,KAAKyB,MAAM,2BAC5CH,aAStBI,gBAAgBb,OAAQD,OACpBA,MAAMK,sCACK,CACP,CAACU,IAAK,UAAWC,UAAW,UAC5B,CAACD,IAAK,eAAgBC,UAAW,uBACjC,CAACD,IAAK,MAAOC,UAAW,UACxB,CAACD,IAAK,KAAMC,UAAW,YACxBC,MAAMC,gCACQC,QACTD,QAAQ,GACRA,QAAQ,GACRA,QAAQ,GACRA,QAAQ,IACR,UACSE,SAASC,SAAS,UAAW,CAACpB,OAAOO,aAAa,YAAa,SAG7Ec,KAAKC,sBAAaC,WASzBC,oBAAoBxB,OAAQD,OACxBA,MAAMK,uBACAqB,UAAYzB,OAAOO,aAAa,WAChCmB,YAAc9B,KAAKuB,SAASQ,IAAI,UAAWF,WAE3CG,KADWhC,KAAKuB,SAASU,cACTC,OAAOlC,KAAKuB,SAASzB,OAC3CkC,KAAKG,aAAeL,YAAYM,MAEH,IAAzBJ,KAAKK,SAASC,QAAwD,MAAxC,UAAGN,KAAKK,SAAS,GAAGE,iBAElDP,KAAKQ,kBAAoB,EACzBR,KAAKK,SAAS,GAAGI,kBAAmB,SAGlCC,aAAe,CAACL,SAAUM,eACvB,IAAIC,KAAKP,SACVA,SAASO,GAAGD,QAAUA,QACtBN,SAASO,GAAGC,eAAkBD,EAAI,EAAKP,SAASO,EAAI,GAAGE,GAAK,EAC5DJ,aAAaL,SAASO,GAAGG,SAAUJ,QAAU,IAAMN,SAASO,GAAGE,IAC/DT,SAASO,GAAGI,YAAcX,SAASO,GAAGG,SAAST,OAC3CD,SAASO,GAAGG,SAASV,SAASO,GAAGG,SAAST,OAAS,GAAGQ,GAAK,GAGvEJ,aAAaV,KAAKK,SAAU,IAC5BL,KAAKgB,YAAchB,KAAKK,SAASC,OAASN,KAAKK,SAASL,KAAKK,SAASC,OAAS,GAAGQ,GAAK,yBAE1ExD,OAAO,CAChB2D,KAAMC,uBAAaC,MAAMC,OACzBhB,OAAO,mBAAU,oBAAqB,QACtCiB,OAAO,EACPC,QAAS,CAACC,QAAQ,mBAAU,mBAAoB,SAChDC,eAAe,IAEdC,MAAKC,2BACQC,OAAO,gDAAiD3B,MAClEyB,MAAMG,OACFF,MAAMG,QAAQD,WACTE,kBAAkBJ,MAAOA,MAAMK,UAAU,GAAIlC,UAAWG,MACtD,QAEVP,MAAK,IAAM,OACZiC,MAAMM,OACCN,SAEVjC,MAAK,IAAM,OASpBwC,eAAe7D,OAAQD,OACnBA,MAAMK,uBACA0D,KAAO9D,OAAO+D,QAAQrB,OACvBoB,kBAGCE,OAASpE,KAAKuB,SAASQ,IAAI,KAAMmC,MAGjClC,KADWhC,KAAKuB,SAASU,cACTC,OAAOlC,KAAKuB,SAASzB,OAK3CkC,KAAKqC,KAAOD,OAAOtB,GACnBd,KAAKsC,OAASF,OAAO7E,4BAERD,OAAO,CAChB2D,KAAMC,uBAAaC,MAAMC,OACzBhB,OAAO,mBAAU,mBAAoB,QACrCiB,OAAO,EACPC,QAAS,CAACC,QAAQ,mBAAU,mBAAoB,SAChDC,eAAe,IAEdC,MAAKC,2BACQC,OAAO,2CAA4C3B,MAC7DyB,MAAMG,OACFF,MAAMG,QAAQD,WACTW,aAAab,MAAOA,MAAMK,UAAU,GAAIG,KAAMlC,MAC5C,QAEVP,MAAK,IAAM,OACZiC,MAAMM,OACCN,SAEVjC,MAAK,IAAM,OAYpB8C,aAAab,MAAOc,UAAWN,KAAMlC,UAAM/B,+DAAU,KAGjDuE,UAAUzE,iBAAiB,SAAUI,cAC3BC,OAASD,MAAMC,WAChBA,OAAOqE,QAAQ,WAA+B7D,IAAvBR,OAAO+D,QAAQO,UAA2C9D,IAAtBR,OAAO+D,QAAQrB,aAG3E1C,OAAOO,aAAa,wBAGxBR,MAAMK,uBAEAmE,gBAA0C,YAAvBvE,OAAO+D,QAAQO,IAAqBtE,OAAO+D,QAAQrB,GAAK,EAC3E8B,WAAqC,OAAvBxE,OAAO+D,QAAQO,IAAgBtE,OAAO+D,QAAQrB,GAAK,OAClEvB,SAASC,SAAS,SAAU,CAAC0C,MAAOS,gBAAiBC,iBACrDC,cAAcnB,MAAOzD,YAUlC4E,cAAcnB,WAAOzD,+DAAU,KAG3ByD,MAAMoB,aACAC,eAAiB,IAAIC,sDACvB/E,SACAA,QAAQgF,QAEZC,YAAW,KACPxB,MAAMyB,UACNJ,eAAeK,YAChB,KAaPtB,kBAAkBJ,MAAOc,UAAW3C,UAAWG,UAAM/B,+DAAU,WAGrDoF,MAAQb,UAAUc,2BAAoBtF,KAAKR,UAAUE,kBACtD,IAAIkD,EAAI,EAAGA,EAAIyC,MAAM/C,SAAUM,EAAG,OAC7B2C,GAAK,IAAIC,kBAAW3D,eAAc,MACpCwD,MAAMzC,GAAGjC,aAAa,2BAAsBkB,YAAewD,MAAMzC,GAAGjC,aAAa,0BAAqBkB,YACtG,UAAGwD,MAAMzC,GAAGjC,aAAa,qBAAmB8E,MAAMF,WAC7CG,aAAaL,MAAMzC,IAiBhC4B,UAAUzE,iBAAiB,SAAUI,cAE3BC,OAASD,MAAMC,WAChBA,OAAOqE,QAAQ,MAA+B,YAAvBrE,OAAO+D,QAAQO,UAA8C9D,IAAzBR,OAAO+D,QAAQwB,gBAG3EvF,OAAOO,aAAa,wBAGxBR,MAAMK,uBACAoF,QAAUC,SAASzF,OAAO+D,QAAQwB,OAClCG,SAAWD,SAASzF,OAAO+D,QAAQ4B,eACpCxE,SAASC,SAAS,cAAe,CAACK,WAAY+D,UAAqBE,eAEnEjB,cAAcnB,MAAOzD,YASlCyF,aAAazF,SACLA,UACAA,QAAQ+F,MAAMC,cAAgB,OAC9BhG,QAAQ+F,MAAME,WAAa,OAC3BjG,QAAQK,UAAU6F,IAAI,YACtBlG,QAAQmG,aAAa,iBAAiB,GACtCnG,QAAQF,iBAAiB,SAASI,OAASA,MAAMK,oBAUzD6F,sBAAsBjG,OAAQD,iCAC1BA,MAAMK,sBACDe,SAASC,SAAS,gBAAiBqE,uCAASzF,OAAO+D,QAAQ4B,gEAAY,IAShFO,+BAA+BlG,OAAQD,8BACnCA,MAAMK,sBACDe,SAASC,SAAS,oDAA0BpB,OAAO+D,QAAQrB,oDAAM"}