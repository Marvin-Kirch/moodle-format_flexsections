{"version":3,"file":"content.min.js","sources":["../../src/local/content.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/* eslint-disable no-console */\n\n/**\n * Course format component\n *\n * @module     format_flexsections/format\n * @copyright  2022 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Component from 'core_courseformat/local/content'; // course/format/amd/src/local/content.js\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\nimport Section from 'format_flexsections/local/content/section';\nimport CmItem from 'core_courseformat/local/content/section/cmitem';\nimport Mutations from \"format_flexsections/local/courseeditor/mutations\";\n\nexport default class FlexsectionComponent extends Component {\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * @param {string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @param {number} sectionReturn the content section return\n     * @return {Component}\n     */\n    static init(target, selectors, sectionReturn) {\n\n        const courseEditor = getCurrentCourseEditor();\n\n        // Hack to preserve legacy mutations (added in core_course/actions) after we set own plugin mutations.\n        let legacyActivityAction = courseEditor.mutations['legacyActivityAction'] ?? {};\n        let legacySectionAction = courseEditor.mutations['legacySectionAction'] ?? {};\n        courseEditor.setMutations(new Mutations());\n        courseEditor.addMutations({legacyActivityAction, legacySectionAction});\n\n        return new FlexsectionComponent({\n            element: document.getElementById(target),\n            reactive: courseEditor,\n            selectors,\n            sectionReturn,\n        });\n    }\n\n    /**\n     * Constructor hook.\n     *\n     * @param {Object} descriptor the component descriptor\n     */\n    create(descriptor) {\n        super.create(descriptor);\n        this.selectors.COURSE_SUBSECTIONLIST = `[data-for='course_subsectionlist']`;\n    }\n\n    /**\n     * Return the component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        let res = super.getWatchers();\n        res.push({watch: `course.hierarchy:updated`, handler: this._refreshCourseHierarchy});\n        return res;\n    }\n\n    /**\n     * Refresh the section list.\n     *\n     * @param {Object} param\n     * @param {Object} param.element details the update details.\n     */\n    _refreshCourseHierarchy({element}) {\n        const hierarchy = element.hierarchy ?? [];\n        const createSection = this._createSectionItem.bind(this);\n        for (let i = 0; i<hierarchy.length; i++) {\n            const sectionlist = hierarchy[i].children;\n            const listparent = this.getElement(this.selectors.COURSE_SUBSECTIONLIST + `[data-parent='${hierarchy[i].id}']`);\n            if (listparent) {\n                this._fixOrder(listparent, sectionlist, this.selectors.SECTION, this.dettachedSections, createSection);\n            }\n        }\n    }\n\n    /**\n     * Regenerate content indexes.\n     *\n     * This method is used when a legacy action refresh some content element.\n     *\n     * Override parent method and replace with our Section and CmItem classes.\n     */\n    _indexContents() {\n        // Find unindexed sections.\n        this._scanIndex(\n            this.selectors.SECTION,\n            this.sections,\n            (item) => {\n                return new Section(item);\n            }\n        );\n\n        // Find unindexed cms.\n        this._scanIndex(\n            this.selectors.CM,\n            this.cms,\n            (item) => {\n                return new CmItem(item);\n            }\n        );\n    }\n\n    /**\n     * Refresh the collapse/expand all sections element.\n     *\n     * @param {Object} state The state data\n     */\n    _refreshAllSectionsToggler(state) {\n        const target = this.getElement(this.selectors.TOGGLEALL);\n        if (!target) {\n            return;\n        }\n        // Check if we have all sections collapsed/expanded.\n        let allcollapsed = true;\n        let allexpanded = true;\n        const mainSection = this._mainSection(state);\n        const sections = this._getSectionsWithCollapse(state);\n        for (let i in sections) {\n            if (parseInt(sections[i].parent) === mainSection) {\n                allcollapsed = allcollapsed && sections[i].contentcollapsed;\n            }\n            allexpanded = allexpanded && !sections[i].contentcollapsed;\n        }\n        // Update control.\n        if (allcollapsed) {\n            target.classList.add(this.classes.COLLAPSED);\n            target.setAttribute('aria-expanded', false);\n        }\n        if (allexpanded) {\n            target.classList.remove(this.classes.COLLAPSED);\n            target.setAttribute('aria-expanded', true);\n        }\n    }\n\n    /**\n     * Handle the collapse/expand all sections button.\n     *\n     * Toggler click is delegated to the main course content element because new sections can\n     * appear at any moment and this way we prevent accidental double bindings.\n     *\n     * @param {Event} event the triggered event\n     */\n    _allSectionToggler(event) {\n        event.preventDefault();\n\n        const target = event.target.closest(this.selectors.TOGGLEALL);\n        const isAllCollapsed = target.classList.contains(this.classes.COLLAPSED);\n\n        const sections = this._getSectionsWithCollapse();\n        let ids = [];\n        for (let i in sections) {\n            ids.push(sections[i].id);\n        }\n        this.reactive.dispatch(\n            'sectionContentCollapsed',\n            ids,\n            !isAllCollapsed\n        );\n    }\n\n    _mainSection(state) {\n        const sectionsList = state.course.sectionlist;\n        let sectionNumber = 0;\n        if (sectionsList.length === 1) {\n            state.section.forEach(s => {\n                if (`${s.id}` === `${sectionsList[0]}`) {\n                    sectionNumber = parseInt(s.number);\n                }\n            });\n        }\n        return sectionNumber;\n    }\n\n    _getSectionsWithCollapse(state) {\n        if (state === undefined) {\n            state = this.reactive.stateManager.state;\n        }\n        const mainSection = this._mainSection(state);\n        let parents = {};\n        parents[`${mainSection}`] = `${mainSection}`;\n        let displayedSections = [];\n        state.section.forEach(\n            section => {\n                const sectionNumber = parseInt(section.number);\n                if (!sectionNumber || sectionNumber === mainSection || !(`${section.parent}` in parents) || section.collapsed) {\n                    return;\n                }\n                parents[`${sectionNumber}`] = `${sectionNumber}`;\n                displayedSections.push(section);\n            }\n        );\n        return displayedSections;\n    }\n}"],"names":["FlexsectionComponent","Component","target","selectors","sectionReturn","courseEditor","legacyActivityAction","mutations","legacySectionAction","setMutations","Mutations","addMutations","element","document","getElementById","reactive","create","descriptor","COURSE_SUBSECTIONLIST","getWatchers","res","super","push","watch","handler","this","_refreshCourseHierarchy","hierarchy","createSection","_createSectionItem","bind","i","length","sectionlist","children","listparent","getElement","id","_fixOrder","SECTION","dettachedSections","_indexContents","_scanIndex","sections","item","Section","CM","cms","CmItem","_refreshAllSectionsToggler","state","TOGGLEALL","allcollapsed","allexpanded","mainSection","_mainSection","_getSectionsWithCollapse","parseInt","parent","contentcollapsed","classList","add","classes","COLLAPSED","setAttribute","remove","_allSectionToggler","event","preventDefault","isAllCollapsed","closest","contains","ids","dispatch","sectionsList","course","sectionNumber","section","forEach","s","number","undefined","stateManager","parents","displayedSections","collapsed"],"mappings":";;;;;;;qQA8BqBA,6BAA6BC,6BAUlCC,OAAQC,UAAWC,sEAErBC,cAAe,8CAGjBC,mDAAuBD,aAAaE,UAAb,4EAAkD,GACzEC,mDAAsBH,aAAaE,UAAb,6EAAiD,UAC3EF,aAAaI,aAAa,IAAIC,oBAC9BL,aAAaM,aAAa,CAACL,qBAAAA,qBAAsBE,oBAAAA,sBAE1C,IAAIR,qBAAqB,CAC5BY,QAASC,SAASC,eAAeZ,QACjCa,SAAUV,aACVF,UAAAA,UACAC,cAAAA,gBASRY,OAAOC,kBACGD,OAAOC,iBACRd,UAAUe,2DAQnBC,kBACQC,IAAMC,MAAMF,qBAChBC,IAAIE,KAAK,CAACC,iCAAmCC,QAASC,KAAKC,0BACpDN,IASXM,yDAAwBd,QAACA,oBACfe,qCAAYf,QAAQe,2DAAa,GACjCC,cAAgBH,KAAKI,mBAAmBC,KAAKL,UAC9C,IAAIM,EAAI,EAAGA,EAAEJ,UAAUK,OAAQD,IAAK,OAC/BE,YAAcN,UAAUI,GAAGG,SAC3BC,WAAaV,KAAKW,WAAWX,KAAKtB,UAAUe,8CAAyCS,UAAUI,GAAGM,UACpGF,iBACKG,UAAUH,WAAYF,YAAaR,KAAKtB,UAAUoC,QAASd,KAAKe,kBAAmBZ,gBAYpGa,sBAESC,WACDjB,KAAKtB,UAAUoC,QACfd,KAAKkB,UACJC,MACU,IAAIC,iBAAQD,aAKtBF,WACDjB,KAAKtB,UAAU2C,GACfrB,KAAKsB,KACJH,MACU,IAAII,gBAAOJ,QAU9BK,2BAA2BC,aACjBhD,OAASuB,KAAKW,WAAWX,KAAKtB,UAAUgD,eACzCjD,kBAIDkD,cAAe,EACfC,aAAc,QACZC,YAAc7B,KAAK8B,aAAaL,OAChCP,SAAWlB,KAAK+B,yBAAyBN,WAC1C,IAAInB,KAAKY,SACNc,SAASd,SAASZ,GAAG2B,UAAYJ,cACjCF,aAAeA,cAAgBT,SAASZ,GAAG4B,kBAE/CN,YAAcA,cAAgBV,SAASZ,GAAG4B,iBAG1CP,eACAlD,OAAO0D,UAAUC,IAAIpC,KAAKqC,QAAQC,WAClC7D,OAAO8D,aAAa,iBAAiB,IAErCX,cACAnD,OAAO0D,UAAUK,OAAOxC,KAAKqC,QAAQC,WACrC7D,OAAO8D,aAAa,iBAAiB,IAY7CE,mBAAmBC,OACfA,MAAMC,uBAGAC,eADSF,MAAMjE,OAAOoE,QAAQ7C,KAAKtB,UAAUgD,WACrBS,UAAUW,SAAS9C,KAAKqC,QAAQC,WAExDpB,SAAWlB,KAAK+B,+BAClBgB,IAAM,OACL,IAAIzC,KAAKY,SACV6B,IAAIlD,KAAKqB,SAASZ,GAAGM,SAEpBtB,SAAS0D,SACV,0BACAD,KACCH,gBAITd,aAAaL,aACHwB,aAAexB,MAAMyB,OAAO1C,gBAC9B2C,cAAgB,SACQ,IAAxBF,aAAa1C,QACbkB,MAAM2B,QAAQC,SAAQC,IACd,UAAGA,EAAE1C,gBAAYqC,aAAa,MAC9BE,cAAgBnB,SAASsB,EAAEC,YAIhCJ,cAGXpB,yBAAyBN,YACP+B,IAAV/B,QACAA,MAAQzB,KAAKV,SAASmE,aAAahC,aAEjCI,YAAc7B,KAAK8B,aAAaL,WAClCiC,QAAU,GACdA,kBAAW7B,wBAAoBA,iBAC3B8B,kBAAoB,UACxBlC,MAAM2B,QAAQC,SACVD,gBACUD,cAAgBnB,SAASoB,QAAQG,QAClCJ,eAAiBA,gBAAkBtB,aAAiB,UAAGuB,QAAQnB,UAAYyB,UAAYN,QAAQQ,YAGpGF,kBAAWP,0BAAsBA,eACjCQ,kBAAkB9D,KAAKuD,aAGxBO"}