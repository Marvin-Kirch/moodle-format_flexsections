{"version":3,"file":"content.min.js","sources":["../../src/local/content.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/* eslint-disable no-console */\n\n/**\n * Course format component\n *\n * @module     format_flexsections/format\n * @copyright  2022 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Component from 'core_courseformat/local/content'; // course/format/amd/src/local/content.js\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\nimport Section from 'format_flexsections/local/content/section';\nimport CmItem from 'core_courseformat/local/content/section/cmitem';\nimport Mutations from \"format_flexsections/local/courseeditor/mutations\";\nimport FlexsectionsActions from 'format_flexsections/local/content/actions';\nimport Exporter from \"format_flexsections/local/courseeditor/exporter\";\nimport {get_string as getString} from \"core/str\";\n\nexport default class FlexsectionComponent extends Component {\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * @param {string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @param {number} sectionReturn the content section return\n     * @return {Component}\n     */\n    static init(target, selectors, sectionReturn) {\n\n        const courseEditor = getCurrentCourseEditor();\n        courseEditor.getExporter = () => new Exporter(courseEditor);\n\n        // Hack to preserve legacy mutations (added in core_course/actions) after we set own plugin mutations.\n        let legacyActivityAction = courseEditor.mutations['legacyActivityAction'] ?? {};\n        let legacySectionAction = courseEditor.mutations['legacySectionAction'] ?? {};\n        courseEditor.setMutations(new Mutations());\n        courseEditor.addMutations({legacyActivityAction, legacySectionAction});\n\n        return new FlexsectionComponent({\n            element: document.getElementById(target),\n            reactive: courseEditor,\n            selectors,\n            sectionReturn,\n        });\n    }\n\n    /**\n     * Constructor hook.\n     *\n     * @param {Object} descriptor the component descriptor\n     */\n    create(descriptor) {\n        super.create(descriptor);\n        this.selectors.COURSE_SUBSECTIONLIST = `[data-for='course_subsectionlist']`;\n        this.selectors.SECTION_ADD_SUBSECTION = `[data-action-flexsections='addSubSection']`;\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {Object} state the state data\n     */\n    stateReady(state) {\n        super.stateReady(state);\n        if (this.reactive.supportComponents) {\n            // Actions are only available in edit mode.\n            if (this.reactive.isEditing) {\n                new FlexsectionsActions(this);\n            }\n        }\n    }\n\n    /**\n     * Return the component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        let res = super.getWatchers();\n        res.push({watch: `course.hierarchy:updated`, handler: this._refreshCourseHierarchy});\n        res.push({watch: `section.collapsed:updated`, handler: this._reloadSection});\n        res.push({watch: `section.title:updated`, handler: this._refreshSectionTitle});\n        return res;\n    }\n\n    /**\n     * Refresh the section list.\n     *\n     * @param {Object} param\n     * @param {Object} param.element details the update details.\n     */\n    _refreshCourseHierarchy({element}) {\n        const hierarchy = element.hierarchy ?? [];\n        const createSection = this._createSectionItem.bind(this);\n        for (let i = 0; i<hierarchy.length; i++) {\n            const sectionlist = hierarchy[i].children;\n            const listparent = this.getElement(this.selectors.COURSE_SUBSECTIONLIST + `[data-parent='${hierarchy[i].id}']`);\n            if (listparent) {\n                this._fixOrder(listparent, sectionlist, this.selectors.SECTION, this.dettachedSections, createSection);\n            }\n        }\n    }\n\n    /**\n     * When section title has changed, change the link \"Add subscrtion for XYZ\"\n     *\n     * @param {Object} param\n     * @param {Object} param.element details the update details.\n     */\n    _refreshSectionTitle({element}) {\n        const el = this.getElement(this.selectors.SECTION_ADD_SUBSECTION + `[data-parentid='${element.id}']`);\n        if (el) {\n            getString('addsubsectionfor', 'format_flexsections', element.title).then((s) => {el.innerHTML = s;});\n        }\n    }\n\n    /**\n     * Regenerate content indexes.\n     *\n     * This method is used when a legacy action refresh some content element.\n     *\n     * Override parent method and replace with our Section and CmItem classes.\n     */\n    _indexContents() {\n        // Find unindexed sections.\n        this._scanIndex(\n            this.selectors.SECTION,\n            this.sections,\n            (item) => {\n                return new Section(item);\n            }\n        );\n\n        // Find unindexed cms.\n        this._scanIndex(\n            this.selectors.CM,\n            this.cms,\n            (item) => {\n                return new CmItem(item);\n            }\n        );\n    }\n\n    /**\n     * Refresh the collapse/expand all sections element.\n     *\n     * @param {Object} state The state data\n     */\n    _refreshAllSectionsToggler(state) {\n        const target = this.getElement(this.selectors.TOGGLEALL);\n        if (!target) {\n            return;\n        }\n        // Check if we have all sections collapsed/expanded.\n        let allcollapsed = true;\n        let allexpanded = true;\n        const mainSection = this._mainSection(state);\n        const sections = this._getSectionsWithCollapse(state);\n        for (let i in sections) {\n            if (parseInt(sections[i].parent) === mainSection) {\n                allcollapsed = allcollapsed && sections[i].contentcollapsed;\n            }\n            allexpanded = allexpanded && !sections[i].contentcollapsed;\n        }\n        // Update control.\n        if (allcollapsed) {\n            target.classList.add(this.classes.COLLAPSED);\n            target.setAttribute('aria-expanded', false);\n        }\n        if (allexpanded) {\n            target.classList.remove(this.classes.COLLAPSED);\n            target.setAttribute('aria-expanded', true);\n        }\n    }\n\n    /**\n     * Handle the collapse/expand all sections button.\n     *\n     * Toggler click is delegated to the main course content element because new sections can\n     * appear at any moment and this way we prevent accidental double bindings.\n     *\n     * @param {Event} event the triggered event\n     */\n    _allSectionToggler(event) {\n        event.preventDefault();\n\n        const target = event.target.closest(this.selectors.TOGGLEALL);\n        const isAllCollapsed = target.classList.contains(this.classes.COLLAPSED);\n\n        const sections = this._getSectionsWithCollapse();\n        let ids = [];\n        for (let i in sections) {\n            ids.push(sections[i].id);\n        }\n        this.reactive.dispatch(\n            'sectionContentCollapsed',\n            ids,\n            !isAllCollapsed\n        );\n    }\n\n    _mainSection(state) {\n        const sectionsList = state.course.sectionlist;\n        let sectionNumber = 0;\n        if (sectionsList.length === 1) {\n            state.section.forEach(s => {\n                if (`${s.id}` === `${sectionsList[0]}`) {\n                    sectionNumber = parseInt(s.number);\n                }\n            });\n        }\n        return sectionNumber;\n    }\n\n    _getSectionsWithCollapse(state) {\n        if (state === undefined) {\n            state = this.reactive.stateManager.state;\n        }\n        const mainSection = this._mainSection(state);\n        let parents = {};\n        parents[`${mainSection}`] = `${mainSection}`;\n        let displayedSections = [];\n        state.section.forEach(\n            section => {\n                const sectionNumber = parseInt(section.number);\n                if (!sectionNumber || sectionNumber === mainSection || !(`${section.parent}` in parents) || section.collapsed) {\n                    return;\n                }\n                parents[`${sectionNumber}`] = `${sectionNumber}`;\n                displayedSections.push(section);\n            }\n        );\n        return displayedSections;\n    }\n}"],"names":["FlexsectionComponent","Component","target","selectors","sectionReturn","courseEditor","getExporter","Exporter","legacyActivityAction","mutations","legacySectionAction","setMutations","Mutations","addMutations","element","document","getElementById","reactive","create","descriptor","COURSE_SUBSECTIONLIST","SECTION_ADD_SUBSECTION","stateReady","state","this","supportComponents","isEditing","FlexsectionsActions","getWatchers","res","super","push","watch","handler","_refreshCourseHierarchy","_reloadSection","_refreshSectionTitle","hierarchy","createSection","_createSectionItem","bind","i","length","sectionlist","children","listparent","getElement","id","_fixOrder","SECTION","dettachedSections","el","title","then","s","innerHTML","_indexContents","_scanIndex","sections","item","Section","CM","cms","CmItem","_refreshAllSectionsToggler","TOGGLEALL","allcollapsed","allexpanded","mainSection","_mainSection","_getSectionsWithCollapse","parseInt","parent","contentcollapsed","classList","add","classes","COLLAPSED","setAttribute","remove","_allSectionToggler","event","preventDefault","isAllCollapsed","closest","contains","ids","dispatch","sectionsList","course","sectionNumber","section","forEach","number","undefined","stateManager","parents","displayedSections","collapsed"],"mappings":";;;;;;;2VAiCqBA,6BAA6BC,6BAUlCC,OAAQC,UAAWC,sEAErBC,cAAe,0CACrBA,aAAaC,YAAc,IAAM,IAAIC,kBAASF,kBAG1CG,mDAAuBH,aAAaI,UAAb,4EAAkD,GACzEC,mDAAsBL,aAAaI,UAAb,6EAAiD,UAC3EJ,aAAaM,aAAa,IAAIC,oBAC9BP,aAAaQ,aAAa,CAACL,qBAAAA,qBAAsBE,oBAAAA,sBAE1C,IAAIV,qBAAqB,CAC5Bc,QAASC,SAASC,eAAed,QACjCe,SAAUZ,aACVF,UAAAA,UACAC,cAAAA,gBASRc,OAAOC,kBACGD,OAAOC,iBACRhB,UAAUiB,gEACVjB,UAAUkB,oEAQnBC,WAAWC,aACDD,WAAWC,OACbC,KAAKP,SAASQ,mBAEVD,KAAKP,SAASS,eACVC,iBAAoBH,MAUpCI,kBACQC,IAAMC,MAAMF,qBAChBC,IAAIE,KAAK,CAACC,iCAAmCC,QAAST,KAAKU,0BAC3DL,IAAIE,KAAK,CAACC,kCAAoCC,QAAST,KAAKW,iBAC5DN,IAAIE,KAAK,CAACC,8BAAgCC,QAAST,KAAKY,uBACjDP,IASXK,yDAAwBpB,QAACA,oBACfuB,qCAAYvB,QAAQuB,2DAAa,GACjCC,cAAgBd,KAAKe,mBAAmBC,KAAKhB,UAC9C,IAAIiB,EAAI,EAAGA,EAAEJ,UAAUK,OAAQD,IAAK,OAC/BE,YAAcN,UAAUI,GAAGG,SAC3BC,WAAarB,KAAKsB,WAAWtB,KAAKrB,UAAUiB,8CAAyCiB,UAAUI,GAAGM,UACpGF,iBACKG,UAAUH,WAAYF,YAAanB,KAAKrB,UAAU8C,QAASzB,KAAK0B,kBAAmBZ,gBAWpGF,gCAAqBtB,QAACA,qBACZqC,GAAK3B,KAAKsB,WAAWtB,KAAKrB,UAAUkB,iDAA4CP,QAAQiC,UAC1FI,wBACU,mBAAoB,sBAAuBrC,QAAQsC,OAAOC,MAAMC,IAAOH,GAAGI,UAAYD,KAWxGE,sBAESC,WACDjC,KAAKrB,UAAU8C,QACfzB,KAAKkC,UACJC,MACU,IAAIC,iBAAQD,aAKtBF,WACDjC,KAAKrB,UAAU0D,GACfrC,KAAKsC,KACJH,MACU,IAAII,gBAAOJ,QAU9BK,2BAA2BzC,aACjBrB,OAASsB,KAAKsB,WAAWtB,KAAKrB,UAAU8D,eACzC/D,kBAIDgE,cAAe,EACfC,aAAc,QACZC,YAAc5C,KAAK6C,aAAa9C,OAChCmC,SAAWlC,KAAK8C,yBAAyB/C,WAC1C,IAAIkB,KAAKiB,SACNa,SAASb,SAASjB,GAAG+B,UAAYJ,cACjCF,aAAeA,cAAgBR,SAASjB,GAAGgC,kBAE/CN,YAAcA,cAAgBT,SAASjB,GAAGgC,iBAG1CP,eACAhE,OAAOwE,UAAUC,IAAInD,KAAKoD,QAAQC,WAClC3E,OAAO4E,aAAa,iBAAiB,IAErCX,cACAjE,OAAOwE,UAAUK,OAAOvD,KAAKoD,QAAQC,WACrC3E,OAAO4E,aAAa,iBAAiB,IAY7CE,mBAAmBC,OACfA,MAAMC,uBAGAC,eADSF,MAAM/E,OAAOkF,QAAQ5D,KAAKrB,UAAU8D,WACrBS,UAAUW,SAAS7D,KAAKoD,QAAQC,WAExDnB,SAAWlC,KAAK8C,+BAClBgB,IAAM,OACL,IAAI7C,KAAKiB,SACV4B,IAAIvD,KAAK2B,SAASjB,GAAGM,SAEpB9B,SAASsE,SACV,0BACAD,KACCH,gBAITd,aAAa9C,aACHiE,aAAejE,MAAMkE,OAAO9C,gBAC9B+C,cAAgB,SACQ,IAAxBF,aAAa9C,QACbnB,MAAMoE,QAAQC,SAAQtC,IACd,UAAGA,EAAEP,gBAAYyC,aAAa,MAC9BE,cAAgBnB,SAASjB,EAAEuC,YAIhCH,cAGXpB,yBAAyB/C,YACPuE,IAAVvE,QACAA,MAAQC,KAAKP,SAAS8E,aAAaxE,aAEjC6C,YAAc5C,KAAK6C,aAAa9C,WAClCyE,QAAU,GACdA,kBAAW5B,wBAAoBA,iBAC3B6B,kBAAoB,UACxB1E,MAAMoE,QAAQC,SACVD,gBACUD,cAAgBnB,SAASoB,QAAQE,QAClCH,eAAiBA,gBAAkBtB,aAAiB,UAAGuB,QAAQnB,UAAYwB,UAAYL,QAAQO,YAGpGF,kBAAWN,0BAAsBA,eACjCO,kBAAkBlE,KAAK4D,aAGxBM"}